@use "../../shared/styles/variables.scss" as *;
@use "../../shared/styles/mixins.scss" as *;

/*=============== TIMELINE ===============*/

.timeline {
  &__section {
    width: 100%;
    height: 100%;
  }

  &-container {
    width: 100%;
    @include container;
    
    @include respond-to(md) {
      padding: 0;
    }
  }

  &-title {
    font-size: 2.25rem;
    margin-bottom: $spacing-sm;
    max-width: 56rem;
    font-weight: normal;
    font-family: $title-font;
    color: $color-text;
    
    @include respond-to(md) {
      font-size: 1.1rem;
    }
  }

  &-description {
    color: $color-text-secondary;
    font-size: 1rem;
    max-width: 24rem;
    font-family: $body-font;
    
    @include respond-to(md) {
      font-size: 0.875rem;
    }
  }

  &-content {
    position: relative;
    max-width: 80rem;
    margin: 0 auto;
    padding-bottom: $spacing-xl;
  }

  &__item {
    @include flex(row, flex-start, center);
    padding-top: $spacing-xl;
    gap: $spacing-lg;
    
    @include respond-to(md) {
      padding-top: 0;
    }

    @include respond-to(sm) {
      @include flex(column, flex-start, stretch);
      gap: $spacing-sm;
      margin-bottom: $spacing-sm;
    }
  }

  &__item-header {
    @include flex(row, flex-start, center);
    position: sticky;
    z-index: 40;
    top: 10rem;
    align-self: flex-start;
    max-width: 24rem;
    width: 100%;
    
    @include respond-to(xl) {
      max-width: 24rem;
    }
  }

  &__dot-container {
    height: 2.5rem;
    position: absolute;
    left: 0.75rem;
    width: 2.5rem;
    border-radius: 50%;
    @include flex(row, center, center);
    @include glassmorphism(8px, 0.1);
  }

  &__dot {
    height: 1rem;
    width: 1rem;
    border-radius: 50%;
    background-color: $color-gray;
    @include transition;

    &:hover {
      @include hover-shadow($color-primary);
    }
  }

  &__item-title {
    font-weight: bold;
    color: $color-gray;
    font-family: $title-font;
    
    &--desktop {
      display: block;
      font-size: 3rem;
      padding-left: 5rem;
      
      @include respond-to(md) {
        display: none;
      }
    }
  }

  &__item-content {
    position: relative;
    padding-left: 4rem;
    padding-right: 0;
    width: 100%;
  }

  // Contenido del timeline
  &__content {
    margin-bottom: $spacing-lg;
  }

  &__content-title {
    font-size: 1.8rem;
    margin-bottom: $spacing-sm;
    color: $color-text;
    font-family: $title-font;
    
    @include respond-to(md) {
      font-size: 1.3rem;
      margin-bottom: $spacing-xs;
    }
  }

  &__tags {
    @include flex(row, flex-start, center, wrap);
    gap: $spacing-xs;
    margin-bottom: $spacing-md;
    
    @include respond-to(md) {
      margin-bottom: $spacing-sm;
    }
  }

  &__content-year {
    @include flex(column, center, center);
    gap: $spacing-lg;
    
    @include respond-to(md) {
      gap: $spacing-md;
    }
  }

  &__image-container {
    @include flex(row, flex-start, center, wrap);
    gap: $spacing-sm;

    img {
      max-width: 28rem;
      width: 100%;
      height: 14rem;
      object-fit: cover;
      border-radius: $border-radius-md;
      overflow: hidden;
      cursor: pointer;
      @include transition;
      
      // Aplicar glassmorphism sutil a las im√°genes
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba($color-primary, 0.1);

      &:hover {
        transform: scale(0.98);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
        border-color: rgba($color-primary, 0.3);
      }

      @include respond-to(md) {
        max-width: 100%;
        height: 10rem;
      }
    }
  }

  /*=============== RADIX ACCORDION ===============*/

  &__accordion {
    padding: 0;
    
    &-root {
      width: 100%;
    }

    &-item {
      width: 100%;
    }

    &-header {
      width: 100%;
      margin: 0;
    }

    &-trigger {
      @include flex(row, space-between, center);
      width: 100%;
      padding: $spacing-sm;
      background: none;
      border: none;
      cursor: pointer;
      @include transition;

      &:hover {
        background-color: rgba($color-primary, 0.08);
      }

      &[data-state="open"] {
        .timeline__accordion-icon--plus {
          opacity: 0;
          transform: rotate(90deg);
        }

        .timeline__accordion-icon--minus {
          opacity: 1;
          transform: rotate(0deg);
        }
      }

      &[data-state="closed"] {
        .timeline__accordion-icon--plus {
          opacity: 1;
          transform: rotate(0deg);
        }

        .timeline__accordion-icon--minus {
          opacity: 0;
          transform: rotate(-90deg);
        }
      }
    }

    &-info {
      @include flex(row, flex-start, center);
      gap: $spacing-sm;
    }

    &-year {
      font-size: 1.5rem;
      font-weight: 600;
      color: $color-text;
      font-family: $title-font;
      margin: 0;
    }

    &-toggle {
      position: relative;
      
      &.custom-button {
        min-width: 2.5rem;
        height: 2.5rem;
        padding: 0;
        pointer-events: none;
      }
    }

    &-icon {
      position: absolute;
      left: 50%;
      transform: translate(-50%, -50%);
      @include transition(all, 0.2s, ease-in-out);

      &--plus {
        opacity: 1;
      }

      &--minus {
        opacity: 0;
      }
    }

    &-content {
      margin-top: $spacing-md;
      overflow: hidden;
      @include transition(all, 0.3s, ease-in-out);

      &[data-state="open"] {
        animation: slideDown 0.3s ease-in-out;
      }

      &[data-state="closed"] {
        animation: slideUp 0.3s ease-in-out;
      }
    }

    &-inner {
      padding: 0 $spacing-md $spacing-md;
    }
  }

  // Animaciones para el accordion
  @keyframes slideDown {
    from {
      height: 0;
      opacity: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      height: var(--radix-accordion-content-height);
      opacity: 1;
    }
    to {
      height: 0;
      opacity: 0;
    }
  }
}

.timeline-line {
  position: absolute;
  left: 2rem;
  top: 0;
  overflow: hidden;
  width: 2px;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    $color-gray 10%,
    $color-gray 90%,
    transparent 100%
  );
  mask-image: linear-gradient(
    to bottom,
    transparent 0%,
    $color-background 10%,
    $color-background 90%,
    transparent 100%
  );
  @include respond-to(md) {
    display: none;
  }
}

.timeline-line-progress {
  position: absolute;
  inset: 0;
  top: 0;
  width: 2px;
  background: linear-gradient(
    to top,
    $color-secondary 0%,
    $color-primary 10%,
    transparent 100%
  );

}

  