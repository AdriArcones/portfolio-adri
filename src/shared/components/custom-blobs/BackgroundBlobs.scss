@use '../../styles/variables.scss' as *;
@use '../../styles/mixins.scss' as *;

.background-blobs {
    position: fixed;
    width: 100%;
    height: 100vh;
    top: 0;
    left: 0;
    overflow: hidden;
    z-index: 0;
    pointer-events: none;
  }
  
  .blob {
    position: absolute;
    border-radius: 50%;
    filter: blur(150px);
    opacity: 0.5;
    will-change: transform;
    animation: float 20s linear infinite;
  
    // Tamaños predefinidos
    &.small {
      width: 200px;
      height: 200px;
      filter: blur(100px);
      animation-duration: 15s;

      @include respond-to(sm) {
        width: 100px;
        height: 100px;
      }
    }
  
    &.medium {
      width: 400px;
      height: 400px;
      filter: blur(150px);
      animation-duration: 20s;

      @include respond-to(sm) {
        width: 300px;
        height: 300px;
      }
    }
  
    &.large {
      width: 600px;
      height: 600px;
      filter: blur(200px);
      animation-duration: 25s;

      @include respond-to(sm) {
        width: 350px;
        height: 350px;
      }
    }
  
    &.xlarge {
      width: 800px;
      height: 800px;
      filter: blur(250px);
      animation-duration: 30s;

      @include respond-to(sm) {
        width: 450px;
        height: 450px;
      }
    }
  
    &.pink {
      background: #ff70d9;
      animation-delay: -2s;
    }
  
    &.blue {
      background: #7ce2fe;
      animation-delay: -5s;
    }
  
    &.orange {
      background: #a270ff;
      animation-delay: -8s;
    }

    &.green {
      background: #70ff9d;
      animation-delay: -12s;
    }

    // Para blobs centrados, usar animación que preserve el centering
    &.centered {
      animation: floatCentered 20s linear infinite;
    }
  }
  
  @keyframes float {
    0% {
      transform: translate3d(0, 0, 0);
    }
    25% {
      transform: translate3d(30px, 30px, 0);
    }
    50% {
      transform: translate3d(0, 30px, 0);
    }
    75% {
      transform: translate3d(-30px, 30px, 0);
    }
    100% {
      transform: translate3d(0, 0, 0);
    }
  }
  
  @keyframes floatCentered {
    0% {
      transform: translate(-50%, -50%) translate3d(0, 0, 0);
    }
    25% {
      transform: translate(-50%, -50%) translate3d(30px, 30px, 0);
    }
    50% {
      transform: translate(-50%, -50%) translate3d(0, 30px, 0);
    }
    75% {
      transform: translate(-50%, -50%) translate3d(-30px, 30px, 0);
    }
    100% {
      transform: translate(-50%, -50%) translate3d(0, 0, 0);
    }
  }
  